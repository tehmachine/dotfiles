" Always show statusline and enable/disable powerline fonts
set laststatus=2
let g:EvilStatusline_powerline = "off"

" Define colors
let g:EvilStatusline_color_normal       = "ctermfg=234 ctermbg=154 cterm=NONE"
let g:EvilStatusline_color_normal_sep   = "ctermfg=154 ctermbg=236 cterm=NONE"
let g:EvilStatusline_color_insert       = "ctermfg=234 ctermbg=033 cterm=NONE"
let g:EvilStatusline_color_insert_sep   = "ctermfg=033 ctermbg=236 cterm=NONE"
let g:EvilStatusline_color_replace      = "ctermfg=234 ctermbg=160 cterm=NONE"
let g:EvilStatusline_color_replace_sep  = "ctermfg=160 ctermbg=236 cterm=NONE"
let g:EvilStatusline_color_visual       = "ctermfg=234 ctermbg=202 cterm=NONE"
let g:EvilStatusline_color_visual_sep   = "ctermfg=202 ctermbg=236 cterm=NONE"
let g:EvilStatusline_color_filename     = "ctermfg=250 ctermbg=236 cterm=NONE"
let g:EvilStatusline_color_fileinfo     = "ctermfg=250 ctermbg=236 cterm=NONE"
let g:EvilStatusline_color_line         = "ctermfg=250 ctermbg=236 cterm=NONE"
let g:EvilStatusline_color_line_sep     = "ctermfg=250 ctermbg=236 cterm=NONE"

" Check for Powerline fonts
if g:EvilStatusline_powerline == "on"
    let g:EvilStatusline_sep_right      = ""
    let g:EvilStatusline_sep_left       = ""
    let g:EvilStatusline_subsep_right   = ""
    let g:EvilStatusline_subsep_left    = ""
    let g:EvilStatusline_sym_git        = ""
    let g:EvilStatusline_sym_readonly   = ""
else
    let g:EvilStatusline_sep_right      = ""
    let g:EvilStatusline_sep_left       = ""
    let g:EvilStatusline_subsep_right   = "|"
    let g:EvilStatusline_subsep_left    = g:EvilStatusline_subsep_right
    let g:EvilStatusline_sym_git        = "Git:"
    let g:EvilStatusline_sym_readonly   = "RO"
endif

" Statusline function
function! EvilStatusline(mode)

    redraw
    let l:mode = mode()
    let status = ""

    " Check for active window
    if a:mode == "Enter"
        " Check for mode
        if l:mode ==# "n"
            exec "hi User1 " . g:EvilStatusline_color_normal
            exec "hi User2 " . g:EvilStatusline_color_normal_sep
            let status .= "%1*" . " NORMAL " . "%2*" . g:EvilStatusline_sep_right
        elseif l:mode ==# "i"
            exec "hi User1 " . g:EvilStatusline_color_insert
            exec "hi User2 " . g:EvilStatusline_color_insert_sep
            let status .= "%1*" . " INSERT " . "%2*" . g:EvilStatusline_sep_right
        elseif l:mode ==# "R"
            exec "hi User1 " . g:EvilStatusline_color_replace
            exec "hi User2 " . g:EvilStatusline_color_replace_sep
            let status .= "%1*" . " REPLACE " . "%2*" . g:EvilStatusline_sep_right
        elseif l:mode ==# "v"
            exec "hi User1 " . g:EvilStatusline_color_visual
            exec "hi User2 " . g:EvilStatusline_color_visual_sep
            let status .= "%1*" . " VISUAL " . "%2*" . g:EvilStatusline_sep_right
        elseif l:mode ==# "V"
            exec "hi User1 " . g:EvilStatusline_color_visual
            exec "hi User2 " . g:EvilStatusline_color_visual_sep
            let status .= "%1*" . " VLINE " . "%2*" . g:EvilStatusline_sep_right
        elseif l:mode ==# ""
            exec "hi User1 " . g:EvilStatusline_color_visual
            exec "hi User2 " . g:EvilStatusline_color_visual_sep
            let status .= "%1*" . " VBLOCK " . "%2*" . g:EvilStatusline_sep_right
        else
            exec "hi User1 " . g:EvilStatusline_color_visual
            exec "hi User2 " . g:EvilStatusline_color_visual_sep
            let status .= "%1*" . " SEARCH " . "%2*". g:EvilStatusline_sep_right
        endif
    " If buffer inactive, don't display mode
    elseif a:mode == "Leave"
        let status .= ""
    endif

    exec "hi User3 " . g:EvilStatusline_color_filename
    exec "hi User4 " . g:EvilStatusline_color_fileinfo
    exec "hi User5 " . g:EvilStatusline_color_line_sep
    exec "hi User6 " . g:EvilStatusline_color_line

    " Git branch
    let status .= "%3*\%{EvilGit()}"

    " Read only, file name, and modified
    let status .= "%{EvilReadonly()}%t\ %m" . "%5*" . g:EvilStatusline_sep_right . "%0*"

    " File format, encoding, and type
    let status .= "%4*" . "%=%{&fileformat}\ " . g:EvilStatusline_subsep_left . "\ %{&fileencoding}\ " . g:EvilStatusline_subsep_left . "\ %{&filetype}\ "

    " Line and column info
    let status .= "%5*" . g:EvilStatusline_subsep_left . "%6*" . "\ L: %l/%L\ C:\ %c\ "

    return status

endfunc

" Git display
function! EvilGit()
    if exists('b:git_dir')
        let branch = fugitive#head()
        return " " . g:EvilStatusline_sym_git . " " . branch . " " . g:EvilStatusline_subsep_right. " "
    endif
    return " "
endfunc

" Read only
function! EvilReadonly()
    if &readonly
        return " " . g:EvilStatusline_sym_readonly . " " . g:EvilStatusline_subsep_right . " "
    endif
    return ""
endfunc

au WinEnter * setlocal statusline=%!EvilStatusline('Enter')
au WinLeave * setlocal statusline=%!EvilStatusline('Leave')
set statusline=%!EvilStatusline('Enter')

au InsertEnter & call EvilMode(v:insertmode)

" vim: ft=vim
